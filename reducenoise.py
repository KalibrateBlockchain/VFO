# -*- coding: utf-8 -*-
"""Copy of ReduceNoise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T9KPtmu-iyoeZx5EWgYBtdenqa4tv0RM
"""

#Here's the stuff to set up COLAB...

colab_requirements = [
#    "pip install tensorflow-gpu==2.0.0-beta0",
    "pip install librosa",
    "pip install noisereduce",
    "pip install soundfile",

]

import sys, subprocess

def run_subprocess_command(cmd):
    # run the command
    process = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE)
    # print the output
    for line in process.stdout:
        print(line.decode().strip())

IN_COLAB = "google.colab" in sys.modules
if IN_COLAB:
    for i in colab_requirements:
        run_subprocess_command(i)

# Commented out IPython magic to ensure Python compatibility.
# Here's the stuff to setup python packages

import IPython
from scipy.io import wavfile
import noisereduce as nr
import soundfile as sf
from noisereduce.generate_noise import band_limited_noise
import matplotlib.pyplot as plt
import urllib.request
import numpy as np
import io
# %matplotlib inline   


# Here's the stuff to read file from my Google Drive
# this will ask for a authorization code to access my Google Drive
from google.colab import drive
drive.mount('/content/drive')

raw_audio, sample_rate = sf.read("/content/drive/MyDrive/CWW-aaaa-heavy-noise.wav")

fig, ax = plt.subplots(figsize=(20,3)) #display raw_audio entire
plt.title('Raw Audio')
ax.plot(raw_audio) #display raw_audio entire

fig, ax = plt.subplots(figsize=(20,3)) #display raw_audio fine detail
plt.title('Raw Audio - Fine Detail')
ax.plot(raw_audio[60000:64000]) #display raw_audio fine detail


# Here's the noise clip extracted from the raw_audio beginning at 0.5 seconds, and ending at 1.5 seconds
noise_clip = raw_audio[int(sample_rate*.5):int(sample_rate*1.5)]

fig, ax = plt.subplots(figsize=(20,3)) #display noise_clip entire
plt.title('Noise Clip')
ax.plot(noise_clip) #display noise_clip entire

# Here's the call to the noise reduction routine.
noise_reduced = nr.reduce_noise(raw_audio, noise_clip, prop_decrease=1.0)

fig, ax = plt.subplots(figsize=(20,3)) #display noise_reduced entire 
plt.title('Noise Reduced')
ax.plot(noise_reduced) #display noise_reduced entire 

fig, ax = plt.subplots(figsize=(20,3)) #display noise_reduced fine detail
plt.title('Noise Reduced - Fine Detail')
ax.plot(noise_reduced[60000:64000]) #display noise_reduced fine detail

IPython.display.Audio(noise_reduced, rate=sample_rate) #play noise_reduced